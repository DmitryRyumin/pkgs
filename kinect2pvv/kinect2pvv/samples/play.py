#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Воспроизведение видеоданных из сенсора Kinect 2

python kinect2pvv/samples/play.py [--config путь_к_конфигурационному_файлу --automatic_update
    --frames_to_update 25 --no_clear_shell]
"""

# ######################################################################################################################
# Импорт необходимых инструментов
# ######################################################################################################################
from datetime import datetime                           # Работа со временем
from types import ModuleType, FunctionType, MethodType  # Проверка объектов на модуль, метод, функцию

import sys

sys.path.append('C:/Users/NUC204/Desktop/GitHub/pkgs/kinect2pvv')

# Персональные
import kinect2pvv  # Воспроизведение видеоданных из сенсора Kinect 2

from pvv.samples import play                # Пример воспроизведения фото/видео данных
from kinect2pvv.viewer import KinectViewer  # Воспроизведение видеоданных из сенсора Kinect 2
from kinect2pvv import configs              # Конфигурационные файлы


# ######################################################################################################################
# Сообщения
# ######################################################################################################################
class Messages(play.Run):
    """Класс для сообщений"""

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __init__(self):
        super().__init__()  # Выполнение конструктора из суперкласса


# ######################################################################################################################
# Выполняем только в том случае, если файл запущен сам по себе
# ######################################################################################################################
class Run(Messages):
    """Класс для воспроизведения видеоданных из сенсора Kinect 2"""

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __init__(self):
        super().__init__()  # Выполнение конструктора из суперкласса

        self._kinect_viewer = KinectViewer()  # Воспроизведение видеоданных из сенсора Kinect 2

    # ------------------------------------------------------------------------------------------------------------------
    #  Внутренние методы
    # ------------------------------------------------------------------------------------------------------------------

    # Построение аргументов командной строки
    def _build_args(self, conv_to_dict = True):
        """
        Построение аргументов командной строки

        ([bool]) -> None or dict

        Аргументы:
           conv_to_dict - Преобразование списка аргументов командной строки в словарь

        Возвращает: dict если парсер командной строки окончательный, в обратном случае None
        """

        super()._build_args(False)  # Выполнение функции из суперкласса

        print(self._ap.parse_args())


        if conv_to_dict is True:
            return vars(self._ap.parse_args())  # Преобразование списка аргументов командной строки в словарь

    # ------------------------------------------------------------------------------------------------------------------
    #  Внешние методы
    # ------------------------------------------------------------------------------------------------------------------

    # Запуск
    def run(self, metadata = kinect2pvv, resources = configs, start = True, out = True):
        """
        Запуск

        ([module, module, bool, bool]) -> None

        Аргументы:
           metadata  - Модуль из которого необходимо извлечь информацию
           resources - Модуль с ресурсами
           start     - Запуск процесса извлечения изображений
           out       - Печатать процесс выполнения
        """

        # Выполнение функции из суперкласса с отрицательным результатом
        if super().run(metadata, resources, False, out) is False:
            return False

        # Запуск алгоритма для поиска объектов
        if self._kinect_viewer.start() is False:
            return False


def main():
    run = Run()

    run.run()


if __name__ == "__main__":
    main()
