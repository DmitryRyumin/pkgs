#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Поиск лиц

python facesdet/samples/detection.py --file путь_к_фото_видео_файлу [--config путь_к_конфигурационному_файлу
    --automatic_update --frames_to_update 25 --no_clear_shell]
"""

# ######################################################################################################################
# Импорт необходимых инструментов
# ######################################################################################################################
import os        # Работа с файловой системой
import time      # Работа со временем
import argparse  # Парсинг аргументов и параметров командной строки
import cv2       # Алгоритмы компьютерного зрения

from datetime import datetime  # Работа со временем

# Персональные
import facesdet  # Поиск лиц

from pvv.samples import play  # Пример воспроизведения фото/видео данных
from facesdet.detection import Detection  # Поиск лиц


# ######################################################################################################################
# Сообщения
# ######################################################################################################################
class Messages(play.Run):
    """Класс для сообщений"""

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __init__(self):
        super().__init__()  # Выполнение конструктора из суперкласса

        self._total_faces = 'Total found faces: {}'


# ######################################################################################################################
# Выполняем только в том случае, если файл запущен сам по себе
# ######################################################################################################################
class Run(Messages):
    """Класс для воспроизведения фото/видео данных"""

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __init__(self):
        super().__init__()  # Выполнение конструктора из суперкласса

        # Набор методов для поиска лиц
        self._methods_data = (
            'opencv_haar',  # Поиск лиц с помощью метода Виолы-Джонса в OpenCV
            'opencv_dnn',  # Поиск лиц с помощью глубокого обучения в OpenCV
            'dlib_hog',  # Поиск лиц с помощью функций HoG и SVM в Dlib
            'dlib_cnn'  # Поиск лиц с помощью Convolutional Neural Network в Dlib
        )

        self._detection = Detection()  # Поиск лиц

        # Добавление вариантов ошибок при автоматическом обновлении конфигурационного файла
        self._automatic_update['model_not_load'] = False  # Модель не загружена

    # ------------------------------------------------------------------------------------------------------------------
    #  Внутренние методы
    # ------------------------------------------------------------------------------------------------------------------

    # Проверка JSON файла настроек на валидность
    def _valid_json_config(self, config, out = True):
        return False

    # ------------------------------------------------------------------------------------------------------------------
    #  Внешние методы
    # ------------------------------------------------------------------------------------------------------------------


def main():
    run = Run()

    run.run(facesdet)


if __name__ == "__main__":
    main()
